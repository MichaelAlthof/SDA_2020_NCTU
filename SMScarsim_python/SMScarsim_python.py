# -*- coding: utf-8 -*-
"""SMScarsim

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16XnfiDhvyAUlc1UmZibdNZb2G1HfWdO6
"""

import pandas as pd
import numpy as np
from sklearn import metrics
from scipy.spatial import distance

df = pd.read_csv('sample_data/carmean2.txt', header=None, sep='|', usecols=[1,2,3,4,5,6,7,8])

df1719 = df.iloc[16:19,] #renault rover toyota
df_mu = df1719.mean() #column mean
df_mu = np.array(df_mu)
x1719 = np.array(df1719)

y = np.zeros((3,8))

for i in range(0,3):
  for j in range(0,8):
    if x1719[i,j] > df_mu[j]:
      y[i,j]=1
    else:
      y[i,j]=0

y #binary matrix

#jaccard score
jaccard_sim = np.zeros((3,3))
for i in range(0,3):
  for j in range(0,3):
    if i==j:
      jaccard_sim[i,j]=1
    else:
      jaccard_sim[i,j]= jaccard_score(y[i,:], y[j,:])

jaccard_sim

#simple matching score
simatch_sim = np.zeros((3,3))
for i in range(0,3):
  for j in range(0,3):
    if i==j:
      simatch_sim[i,j] = 1
    else:
      simatch_sim[i,j] = sum(y[i,:] == y[j,:])/8

simatch_sim

#roger score
rogerstan_sim = np.zeros((3,3))
for i in range(0,3):
  for j in range(0,3):
    if i==j:
      rogerstan_sim[i,j] = 1
    else:
      rogerstan_sim[i,j] = 1-distance.rogerstanimoto(y[i,:], y[j,:])

rogerstan_sim