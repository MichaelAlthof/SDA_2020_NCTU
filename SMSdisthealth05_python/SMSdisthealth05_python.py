# -*- coding: utf-8 -*-
"""SMSdisthealth05.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jq1DVVfmWIdRshxSkLezvJ_tf0mLlnSk
"""

import pandas as pd
from scipy.spatial import distance
from scipy.spatial import distance_matrix
import numpy as np

url = 'https://raw.githubusercontent.com/QuantLet/SMS/master/SMSdisthealth05/ushealth05.csv' #read data with url
df = pd.read_csv(url) #read data with url
df = pd.read_csv('ushealth05.csv')

df.sort_values(by='Region', inplace=True)
df.Region = pd.Categorical(df.Region)
df['Region'] = df.Region.cat.codes + 1
df['Region'] = df['Region'].astype('str')
df.set_index(df['ANSI']  + " " + df['Region'], inplace=True)
ush = df[(df['ANSI'] == "ME") | (df['ANSI'] == "NH") | (df['ANSI']=='NY')]
ush = ush.iloc[:,2:12]

#euclidean distance
dist_eu = pd.DataFrame(distance_matrix(ush.values, ush.values, p=2), index=ush.index, columns=ush.index)

#manhattan distance
dist_man = np.zeros((3,3))
for i in range(0,3):
  for j in range(0,3):
    if i == j :
      dist_man[i,j] = 0
    else :
      dist_man[i,j] = distance.cityblock(ush.values[i], ush.values[j])
dist_man = pd.DataFrame(dist_man, index = ush.index, columns = ush.index)

#maximum distance
dist_max = np.zeros((3,3))
for i in range(0,3):
  for j in range(0,3):
    if i!=j :
      dist_max[i,j] = max(abs(ush.values[i]-ush.values[j]))
dist_max = pd.DataFrame(dist_max, index = ush.index, columns = ush.index)